---
title: "Amazon"
format: html
editor: visual
---

# Load Libraries

```{r}
library(tidyverse)
library(tidymodels)
library(vroom)
library(ggplot2)
library(dplyr)
library(patchwork)
library(glmnet)
library(embed)
library(lme4)
```

# Import Data

```{r}
train <- vroom("~/GitHub/Stat 348/Amazon/Data/train.csv")
test <- vroom("~/GitHub/Stat 348/Amazon/Data/test.csv")
```

# EDA

```{r}
ggplot(train, aes(x = factor(ACTION))) +
  geom_bar(fill = "skyblue", color = "black") +
  labs(title = "Distribution of Access Actions",
       x = "Action (0 = Denied, 1 = Granted)",
       y = "Count") +
  theme_minimal()

train %>%
  count(RESOURCE, sort = TRUE) %>%
  slice_head(n = 10) %>%
  ggplot(aes(x = reorder(factor(RESOURCE), n), y = n)) +
  geom_col(fill = "steelblue") +
  coord_flip() +
  labs(title = "Top 10 Most Common Resources Accessed",
       x = "Resource ID",
       y = "Number of Requests") +
  theme_minimal()
```

# Recipe

```{r}


amazon_recipe <- recipe(ACTION ~ ., data = train) %>%
step_mutate(across(everything(), as.factor))%>% 
step_other(all_nominal_predictors(), threshold = 0.001)%>%
step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION))

amazon_prep <- prep(amazon_recipe)
amazon_train <- bake(amazon_prep, new_data = NULL)
amazon_test <- bake(amazon_prep, new_data = test)
View(amazon_train)
```

Models

```{r}
logRegModel <- logistic_reg(mixture = tune(), penalty = tune()) %>%
set_engine("glmnet")
```

Workflow

```{r}
wf <- workflow() %>%
add_recipe(amazon_recipe) %>%
add_model(logRegModel) #%>%
# fit(data = train)
```

Tuning

```{r}
tuning_grid <- grid_regular(penalty(),
mixture(),
levels = 7)

folds <- vfold_cv(train, v = 7, repeats=1)
```

Running CV

```{r}
CV_results <- wf %>%
  tune_grid(resamples = folds,
            grid = tuning_grid,
            metrics = metric_set(roc_auc))

bestTune <- CV_results %>%
  select_best(metric = "roc_auc")
```

Predictions

```{r}

final_wf <-
  wf %>%
  finalize_workflow(bestTune) %>%
  fit(data=train)


amazon_predictions <- predict(final_wf,
new_data = test,
type= "prob") 
```

Print

```{r}
kaggle_submission <- amazon_predictions |>
  bind_cols(test) |> 
  select(id, .pred_1) |>
  rename(ACTION = .pred_1) 

## Write out the file
vroom_write(x = kaggle_submission,
            file = "~/GitHub/Stat 348/Amazon/Data/KaggleSub/Kaggle_Submission.csv",
            delim = ",")
```
