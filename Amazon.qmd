---
title: "Amazon"
format: html
editor: visual
---

#notes

```{r}
# lcd /mnt/c/Users/riley/Documents/GitHub/Stat\ 348/Amazon
```

# Load Libraries

```{r}
library(tidyverse)
library(tidymodels)
library(vroom)
library(glmnet)
library(embed)
library(lme4)
library(kknn)
library(ranger)
```

# Import Data

```{r}
train <- vroom("~/GitHub/Stat 348/Amazon/Data/train.csv")
test <- vroom("~/GitHub/Stat 348/Amazon/Data/test.csv")
```

# Recipe

```{r}
train <- train %>%
  mutate(ACTION = as.factor(ACTION))

amazon_recipe <- recipe(ACTION ~ ., data = train) %>%
  step_string2factor(all_nominal_predictors()) %>%
  step_other(all_nominal_predictors(), threshold = 0.001) %>%
  step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION)) %>%
  step_normalize(all_numeric_predictors()) %>%
  step_pca(all_predictors(), threshold=.8)

amazon_prep <- prep(amazon_recipe)
amazon_train <- bake(amazon_prep, new_data = NULL)
amazon_test <- bake(amazon_prep, new_data = test)

```

# Models

```{r}
svmPoly <- svm_poly(degree=tune(), cost=tune()) %>% 
set_mode("classification") %>%
set_engine("kernlab")

svmRadial <- svm_rbf(rbf_sigma=tune(), cost=tune()) %>% 
set_mode("classification") %>%
set_engine("kernlab")

svmLinear <- svm_linear(cost=tune()) %>%
set_mode("classification") %>%
set_engine("kernlab")

```

# Workflow

```{r}
wf_Poly <- workflow() %>%
  add_recipe(amazon_recipe) %>%
  add_model(svmPoly)

wf_Rad <- workflow() %>%
  add_recipe(amazon_recipe) %>%
  add_model(svmRadial)

wf_Lin <- workflow() %>%
  add_recipe(amazon_recipe) %>%
  add_model(svmLinear)
```

# Tune

```{r}
tune_grid_poly <- grid_regular(
  degree(range = c(1, 5)),
  cost(range = c(-3, 3), trans = log10_trans()),
  levels = 5)

tune_grid_rad <- grid_regular(
  rbf_sigma(range = c(-3, 0), trans = log10_trans()), 
  cost(range = c(-3, 3), trans = log10_trans()),
  levels = 5)

tune_grid_lin <- grid_regular(
  cost(range = c(-3, 3), trans = log10_trans()),
  levels = 5)


folds <- vfold_cv(train, v = 5)

## Run the CV
CV_results_poly <- wf %>%
  tune_grid(
    resamples = folds,
    grid = tune_grid_poly,
    metrics = metric_set(roc_auc, accuracy)
  )

CV_results_rad <- wf %>%
  tune_grid(
    resamples = folds,
    grid = tune_grid_rad,
    metrics = metric_set(roc_auc, accuracy)
  )

CV_results_lin <- wf %>%
  tune_grid(
    resamples = folds,
    grid = tune_grid_lin,
    metrics = metric_set(roc_auc, accuracy)
  )
```

# Best model

```{r}
bestTune_poly <- CV_results_poly %>%
  select_best(metric = "roc_auc")

bestTune_rad <- CV_results_rad %>%
  select_best(metric = "roc_auc")

bestTune_lin <- CV_results_lin %>%
  select_best(metric = "roc_auc")
```

# Predictions

```{r}
final_wf <- wf %>%
  finalize_workflow(bestTune) %>%
  fit(data = train)

amazon_predictions <- predict(final_wf,
new_data = test,
type= "prob") 
```

# Print

```{r}
kaggle_submission <- amazon_predictions |>
  bind_cols(test) |> 
  select(id, .pred_1) |>
  rename(ACTION = .pred_1) 

## Write out the file
vroom_write(x = kaggle_submission,
            file = "~/GitHub/Stat 348/Amazon/Data/KaggleSub/Kaggle_Submission.csv",
            delim = ",")
```
